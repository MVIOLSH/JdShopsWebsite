@page "/announcement/{id}"
@using System.Net
@using System.Security.Authentication.ExtendedProtection
@using System.Text
@using Bunit.Extensions
@using Flurl
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Options
@using Newtonsoft.Json
@inject HttpClient Http
@inject NavigationManager navMan

<div style="font-size: 2.5rem; font-weight: bold; font-style: italic;"><center>Dashboard</center></div>
@if (announcements == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var post in announcements)
    {
        <h3>@post.Title </h3>

        <div class="form-group">
            <label for="title" style="font-weight:bold">Title</label><br/>
            <label>Current value:  @post.Title </label>
            <input @bind="title" type="text" class="form-control" id="shop-number" placeholder="Enter new Title" />
        </div>

        <div class="form-group">
            <label for="content" style="font-weight:bold">Content</label><br/>
            <label>Current value: @post.Content </label>
            <textarea @bind="Content" type="text" class="form-control" id="description" placeholder="Enter New Content" />
        </div>
        <div class="form-group">
            <label for="Type" style="font-weight:bold">Choose the type of the announcement</label><br />
            <select class="form-select form-select-sm" aria-label=".form-select-sm example" @bind="@post.Type">
                <option value="Office Announcement">Office Announcement</option>
                <option value="Coleague Announcement">Colleague Announcement</option>
                <option value="HR Announcement">HR Announcement</option>
                <option value="Miscelanous">Miscellaneous</option>
            </select>
        </div>
        <div class="form-group">
            <label for="isPublished" style="font-weight:bold">Published?</label><br />
            <select class="form-select form-select-sm" aria-label=".form-select-sm example" @bind="isPublished">
                <option value="Yes">Yes</option>
                <option value="No">No</option>
            </select>
        </div>
        <br /><button @onclick="@(()=>Save(post.Id))" class="btn btn-success">Save new Details</button>
        <button @onclick="@(()=>Delete(post.Id))" class="btn btn-danger">Delete Post</button>
        <button @onclick="@(()=>GoBack())" class="btn btn-primary">Go Back</button>



    }

}
@code {
    private List<AnnouncementDto> announcements { get; set; }

    [Parameter]
    public string id { get; set; }

    public string title { get; set; }
    public string Content { get; set; }
    public string isPublished { get; set; } = "yes";
    public string Type { get; set; }
    public bool isDeleted { get; set; } = false;
    public bool isPublishedValue { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var url = Url.Combine("https://jdshops-api-app.azurewebsites.net/api/announcements", id.ToString());
        announcements = await Http.GetFromJsonAsync<List<AnnouncementDto>>(url);
    }

    async void Save(int id)
    {
        foreach (var post in announcements)
        {
            if (title.IsNullOrEmpty())
            {
                title = post.Title;
            }
            if (Content.IsNullOrEmpty())
            {
                Content = post.Content;
            }
            if (isPublished != "No")
            {
                isPublishedValue = true;
            }
            if (Type.IsNullOrEmpty())
            {
                Type = post.Type;
            }
        }
        var newPost = new AnnouncementDto()
        {
            Title = title,
            Content = Content,
            IsPublished = isPublishedValue,
            Type = Type,
            IsDeleted = isDeleted
        };

        var newPostJson = JsonConvert.SerializeObject(newPost);
        var content = new StringContent(newPostJson, Encoding.UTF8, "application/json");
        var url = Url.Combine("https://jdshops-api-app.azurewebsites.net/api/announcements/", id.ToString());
        var response = Http.PatchAsync(url, content);
        

    }

    public void Delete(int id)
    {
        var url = Url.Combine("https://jdshops-api-app.azurewebsites.net/api/announcements", id.ToString());
        Http.DeleteAsync(url);
        var url2 = Url.Combine("/");
   
    }

    void GoBack()
    {
        var url2 = Url.Combine("/");
        navMan.NavigateTo(url2, true);
    }






}
