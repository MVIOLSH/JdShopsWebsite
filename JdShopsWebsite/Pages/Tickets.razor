@page "/tickets"
@using Flurl
@inject HttpClient Http
@inject NavigationManager navMan


<h1>Tickets System</h1>
<br />
<input class="form-control" type="text" placeholder="Search...."
       @bind="Filter">
<br />
<button class="btn btn-primary" @onclick="(()=>Seearch(Filter))">Hit to search</button>
<br/>
<br/>



@if (tickets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Shop Number</th>
                <th>Status</th>
                <th>Title</th>
                <th>More Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in tickets)
            {
                <tr>
                    <td>@ticket.Id</td>
                    <td>@ticket.ShopNumber</td>
                    <td>@ticket.Status</td>
                    <td>@ticket.Title</td>
                    <td><button class="btn btn-primary" @onclick="(()=>NavigateToTicketDetails(ticket.Id))">More Details</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public string Filter { get; set; }
    private List<TicketDto> tickets { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var url = Url.Combine("https://jdshopsapi.szymanski.uk/api/tickets?searchPhrase=" );
        tickets = await Http.GetFromJsonAsync<List<TicketDto>>(url);
    }
    private void NavigateToTicketDetails(int id)
    {

        var url2 = Url.Combine($"/ticketDetails/", id.ToString());
        navMan.NavigateTo(url2, true);

    }

    private async Task Seearch(string search)
    {
        var url = Url.Combine("https://jdshopsapi.szymanski.uk/api/tickets?searchPhrase="+search);
        tickets = await Http.GetFromJsonAsync<List<TicketDto>>(url);
    }



}
